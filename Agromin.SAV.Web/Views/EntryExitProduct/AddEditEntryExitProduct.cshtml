@model Agromin.SAV.Web.ViewModel.EntryExitProduct.AddEditEntryExitProductViewModel

@{
    ViewBag.Title = Model.EntryExitProductId.HasValue ? "Editar entrada y salida de productos" : "Agregar entrada y salida de productos";
    ViewBag.ModalIcon = "fa fa-EntryExitProduct";
}


<div class="col-lg-12">
    <div class="card">
        <div class="card-body">

            <form class="needs-validation" novalidate method="post">

                <div class="col-md-12 mb-3">
                    <label for="" class="col-form-label">@Html.LabelFor(x => x.ProductBrandId)<span class="text-danger">*</span></label>
                    @Html.DropDownListFor(x => x.ProductBrandId, new SelectList(Model.LstProductBrand, "ProductBrandId", "NameProductBrand"), "Marca producto", new { @class = "form-control" })
                    @*<select name="" id="" class="DepartmentId" value=""></select>*@
                    <div class="invalid-tooltip">
                        Please provide a valid state.
                    </div>
                </div>
                <div class="col-md-12 mb-3">
                    <label for="" class=" col-form-label">@Html.LabelFor(x => x.Amount)<span class="text-danger">*</span></label>
                    @Html.TextBoxFor(x => x.Amount, new { @class = "form-control", placeholder = "Cantidad de producto" })
                    <div class="valid-tooltip">
                        Looks good!
                    </div>
                    <div class="invalid-tooltip">
                        Please enter first name.
                    </div>
                </div>
                <button class="btn btn-success btn-rounded" type="submit" id="btnSubmit"><i class="fe-save"></i> Guardar</button>
            </form>
        </div> <!-- end card-body-->
    </div>
</div>